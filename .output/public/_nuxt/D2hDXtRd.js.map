{"version":3,"file":"D2hDXtRd.js","sources":["../../../../composables/authorization.ts"],"sourcesContent":["import type { UserWithRoles } from \"~/server/api/auth/me\"\n\nexport const useAuthorization = () => {\n    const { data } = useAuth()\n    const permissions = computed(() => (data.value?.user as UserWithRoles).role.permissions.map((permission) => permission.name))\n\n    const can = (permission: string | string[], role: string | null = null): boolean => {\n        if (role != null)\n            return (role == (data.value?.user as UserWithRoles).role.name)\n\n        if (Array.isArray(permission)) {\n            let isTrue = false\n            for (const p of permission) {\n                isTrue = isTrue || checkPermission(p)\n            }\n\n            return isTrue\n        } else {\n            return checkPermission(permission)\n        }\n    }\n\n    const checkPermission = (permission: string) => {\n        const [access, resource] = permission.split('_')\n\n        return access === '*'\n            ? true\n            : access === 'manage'\n                ? permissions.value.filter(permission => permission.includes(resource)).length === 4\n                : permissions.value.includes(permission)\n    }\n\n    return { can }\n}"],"names":["useAuthorization","data","useAuth","permissions","computed","_a","permission","can","role","isTrue","p","checkPermission","access","resource"],"mappings":"yCAEO,MAAMA,EAAmB,IAAM,CAC5B,KAAA,CAAE,KAAAC,GAASC,IACXC,EAAcC,EAAS,IAAO,OAAA,QAAAC,EAAAJ,EAAK,QAAL,YAAAI,EAAY,MAAuB,KAAK,YAAY,IAAKC,GAAeA,EAAW,IAAI,EAAC,EAEtHC,EAAM,CAACD,EAA+BE,EAAsB,OAAkB,OAChF,GAAIA,GAAQ,KACR,OAAQA,KAASH,EAAAJ,EAAK,QAAL,YAAAI,EAAY,MAAuB,KAAK,KAEzD,GAAA,MAAM,QAAQC,CAAU,EAAG,CAC3B,IAAIG,EAAS,GACb,UAAWC,KAAKJ,EACHG,EAAAA,GAAUE,EAAgBD,CAAC,EAGjC,OAAAD,CAAA,KAEP,QAAOE,EAAgBL,CAAU,CACrC,EAGEK,EAAmBL,GAAuB,CAC5C,KAAM,CAACM,EAAQC,CAAQ,EAAIP,EAAW,MAAM,GAAG,EAExC,OAAAM,IAAW,IACZ,GACAA,IAAW,SACPT,EAAY,MAAM,OAAOG,GAAcA,EAAW,SAASO,CAAQ,CAAC,EAAE,SAAW,EACjFV,EAAY,MAAM,SAASG,CAAU,CAAA,EAGnD,MAAO,CAAE,IAAAC,CAAI,CACjB"}