{"version":3,"file":"C42XPPgq.js","sources":["../../../../store/productCategory.ts","../../../../lib/helper/debounce.ts","../../../../components/Modal.vue","../../../../components/Alert.vue"],"sourcesContent":["import { Prisma, type Category } from '@prisma/client'\nimport { defineStore } from 'pinia'\n\nconst categoryWithPredecessor = Prisma.validator<Prisma.CategoryDefaultArgs>()({\n  include: {\n    predecessor: true,\n    image: true\n  }\n})\ntype CategoryWithPredecessor = Prisma.CategoryGetPayload<typeof categoryWithPredecessor>\n\nexport const useProductCategoryStore = defineStore('product_category', () => {\n  const categoryList = ref<CategoryWithPredecessor[]>([])\n\n  const fetchCategory = async () => {\n    $fetch<APIResponse<CategoryWithPredecessor[]>>('/api/category')\n      .then(response => {\n        if (response.status == 'success')\n          categoryList.value = response.data\n      })\n  }\n\n  const saveCategory = (values: any) => new Promise((resolve, reject) => {\n    {\n      $fetch<APIResponse<Category>>('/api/category', {\n        method: 'POST',\n        body: values\n      })\n        .then((a) => {\n          if (a.status == 'success')\n            resolve(true)\n          else\n            reject(a.message)\n        })\n    }\n  })\n\n  return { fetchCategory, saveCategory, categoryList }\n})\n","let timer: any\n\nexport const debounce = (callback: Function) => {\n    if (timer)\n        clearTimeout(timer)\n\n    timer = setTimeout(() => {\n        callback()\n    }, 200)\n}","<script lang=\"ts\" setup>\n  import { debounce } from '~/lib/helper/debounce'\n\n  const emit = defineEmits(['modal:close'])\n\n  const modal = ref()\n  const isActive = defineModel('show', {\n    required: true,\n    default: false\n  })\n\n  const closeModal = () => {\n    isActive.value = false\n    emit('modal:close')\n  }\n\n  const clickOnOutside = (event: Event) => debounce(() => {\n    if (isActive.value) {\n\n      if (!modal.value.contains(event.target)) {\n        event.preventDefault()\n        closeModal()\n      }\n    }\n  })\n\n  watch(isActive, () => {\n    if (isActive.value)\n      setTimeout(() => {\n        document.addEventListener('click', clickOnOutside)\n      }, 500)\n    else\n      document.removeEventListener('click', clickOnOutside)\n  })\n\n</script>\n\n<template>\n  <Teleport to=\"body\">\n    <section :class=\"{ 'modal': true, 'modal--active': isActive }\">\n      <div class=\"modal__content\" ref=\"modal\">\n        <a href=\"#\" class=\"modal__close\" @click.prevent=\"closeModal\"><span class=\"icon-add\"></span></a>\n        <slot />\n      </div>\n    </section>\n  </Teleport>\n</template>\n","<script setup lang=\"ts\">\n    interface AlertProps {\n        title: string,\n        subTitle?: string | null\n        confirmText?: string\n        onConfirm?: Function\n        cancelText?: string\n        onCancel?: Function\n    }\n\n    const props = withDefaults(defineProps<AlertProps>(), {\n        title: '',\n        subTitle: null,\n        confirmText: 'Ok!',\n        onConfirm: () => { },\n        cancelText: 'No!',\n        onCancel: () => { },\n    })\n\n    const loading = defineModel('loading', {\n        type: Boolean,\n        default: false\n    })\n    const show = defineModel('show', {\n        type: Boolean,\n        default: false\n    })\n\n    const alert = ref()\n\n    const init = () => {\n        if (show.value) {\n            document.body.style.overflow = 'hidden'\n            setTimeout(() => {\n                document.addEventListener('click', clickOnOutside)\n            }, 500)\n        } else {\n            document.body.style.overflow = ''\n            document.removeEventListener('click', clickOnOutside)\n        }\n    }\n\n    const closeAlert = () => {\n        show.value = false\n\n        props.onCancel()\n    }\n\n    const clickOnOutside = (event: Event) => {\n        if (show.value) {\n            event.preventDefault()\n            event.stopPropagation()\n\n            if (!alert.value.contains(event.target)) {\n                show.value = false\n                props.onCancel()\n            }\n        }\n    }\n\n    const confirming = () => {\n        props.onConfirm()\n    }\n\n    onMounted(() => {\n        init()\n    })\n\n    watch(show, () => {\n        init()\n    })\n</script>\n\n<template>\n    <Teleport to=\"body\">\n        <div :class=\"{ 'alert': true, 'alert--show': show }\">\n            <div class=\"alert__holder\" ref=\"alert\">\n                <a href=\"#\" class=\"alert__close\" @click.prevent=\"closeAlert\"><span class=\"icon-add\"></span></a>\n                <div class=\"alert__icon\">\n                    <span class=\"icon-question-c\"></span>\n                </div>\n                <div class=\"alert__message\">\n                    <strong class=\"title\">{{ title }}</strong>\n                    <em class=\"subtitle\" v-if=\"subTitle\">{{ subTitle }}</em>\n                    <div class=\"text\">\n                        <slot />\n                    </div>\n                </div>\n                <div class=\"alert__action\">\n                    <button type=\"button\" class=\"btn btn__primary btn--outline\" @click=\"closeAlert\">\n                        {{ cancelText }}\n                    </button>\n                    <button type=\"button\" :class=\"{ 'btn btn__primary': true, 'loading': loading }\" @click=\"confirming\">\n                        {{ confirmText }}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </Teleport>\n</template>"],"names":["Prisma","useProductCategoryStore","defineStore","categoryList","ref","response","values","resolve","reject","a","timer","debounce","callback","emit","__emit","modal","isActive","_useModel","__props","closeModal","clickOnOutside","event","watch","props","loading","show","alert","init","closeAlert","confirming","onMounted"],"mappings":"0KAGgCA,EAAO,OAAA,UAAA,EAAwC,CAC7E,QAAS,CACP,YAAa,GACb,MAAO,EACT,CACF,CAAC,EAGY,MAAAC,EAA0BC,EAAY,mBAAoB,IAAM,CACrE,MAAAC,EAAeC,EAA+B,CAAA,CAAE,EAyB/C,MAAA,CAAE,cAvBa,SAAY,CACe,OAAA,eAAe,EAC3D,KAAiBC,GAAA,CACZA,EAAS,QAAU,YACrBF,EAAa,MAAQE,EAAS,KAAA,CACjC,CAAA,EAkBmB,aAfFC,GAAgB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAEnE,OAA8B,gBAAiB,CAC7C,OAAQ,OACR,KAAMF,CAAA,CACP,EACE,KAAMG,GAAM,CACPA,EAAE,QAAU,UACdF,EAAQ,EAAI,EAEZC,EAAOC,EAAE,OAAO,CAAA,CACnB,CACL,CACD,EAEqC,aAAAN,EACxC,CAAC,ECtCD,IAAIO,EAES,MAAAC,EAAYC,GAAuB,CACxCF,GACA,aAAaA,CAAK,EAEtBA,EAAQ,WAAW,IAAM,CACZE,KACV,GAAG,CACV,wICNE,MAAMC,EAAOC,EAEPC,EAAQX,IACRY,EAAWC,EAAWC,EAAC,MAG5B,EAEKC,EAAa,IAAM,CACvBH,EAAS,MAAQ,GACjBH,EAAK,aAAa,CAAA,EAGdO,EAAkBC,GAAiBV,EAAS,IAAM,CAClDK,EAAS,QAEND,EAAM,MAAM,SAASM,EAAM,MAAM,IACpCA,EAAM,eAAe,EACVF,KAEf,CACD,EAED,OAAAG,EAAMN,EAAU,IAAM,CAChBA,EAAS,MACX,WAAW,IAAM,CACN,SAAA,iBAAiB,QAASI,CAAc,GAChD,GAAG,EAEG,SAAA,oBAAoB,QAASA,CAAc,CAAA,CACvD,ywBCvBC,MAAMG,EAAQL,EASRM,EAAUP,EAAWC,EAAC,SAG3B,EACKO,EAAOR,EAAYC,EAAA,MAGxB,EAEKQ,EAAQtB,IAERuB,EAAO,IAAM,CACXF,EAAK,OACI,SAAA,KAAK,MAAM,SAAW,SAC/B,WAAW,IAAM,CACJ,SAAA,iBAAiB,QAASL,CAAc,GAClD,GAAG,IAEG,SAAA,KAAK,MAAM,SAAW,GACtB,SAAA,oBAAoB,QAASA,CAAc,EACxD,EAGEQ,EAAa,IAAM,CACrBH,EAAK,MAAQ,GAEbF,EAAM,SAAS,CAAA,EAGbH,EAAkBC,GAAiB,CACjCI,EAAK,QACLJ,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EAEjBK,EAAM,MAAM,SAASL,EAAM,MAAM,IAClCI,EAAK,MAAQ,GACbF,EAAM,SAAS,GAEvB,EAGEM,EAAa,IAAM,CACrBN,EAAM,UAAU,CAAA,EAGpB,OAAAO,EAAU,IAAM,CACPH,GAAA,CACR,EAEDL,EAAMG,EAAM,IAAM,CACTE,GAAA,CACR"}