{"version":3,"file":"7nogWRP0.js","sources":["../../../../lib/schema/category.ts","../../../../node_modules/nuxt-file-storage/dist/runtime/composables/useFileStorage.mjs","../../../../components/product/category/form.vue","../../../../pages/dashboard/category.vue"],"sourcesContent":["import * as Yup from 'yup'\n\nexport const categorySchema = Yup.object({\n    name: Yup.string().required().label('Name'),\n    description: Yup.string().label('Description')\n})","import { ref } from \"vue\";\nexport default function() {\n  const files = ref([]);\n  const serializeFile = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        files.value.push({\n          ...file,\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified,\n          content: e.target?.result\n        });\n        resolve();\n      };\n      reader.onerror = (error) => {\n        reject(error);\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const handleFileInput = async (event) => {\n    files.value.splice(0);\n    const promises = [];\n    for (const file of event.target.files) {\n      promises.push(serializeFile(file));\n    }\n    await Promise.all(promises);\n  };\n  return {\n    files,\n    handleFileInput\n  };\n}\n","<script lang=\"ts\" setup>\n  import type { Category } from '@prisma/client'\n  import type { SubmissionContext } from 'vee-validate'\n  import { Form, Field, ErrorMessage } from 'vee-validate'\n\n  import { categorySchema } from '~/lib/schema/category'\n  import { useProductCategoryStore } from '~/store/productCategory'\n  import FileUpload from '~/components/FileUpload.vue'\n\n  interface CategoryFormProps {\n    category?: Category | null\n  }\n\n  const props = defineProps<CategoryFormProps>()\n  const emit = defineEmits(['update-form'])\n  const { saveCategory } = useProductCategoryStore()\n  const { categoryList } = storeToRefs(useProductCategoryStore())\n  const { files, handleFileInput } = useFileStorage()\n\n  const form = ref()\n  const isLoading = ref(false)\n\n  const submitHandler = (values: any, { resetForm }: SubmissionContext) => {\n    isLoading.value = true\n\n    saveCategory({ ...values, files: files.value })\n      .then(() => {\n        emit('update-form')\n        resetForm()\n      })\n      .finally(() => {\n        isLoading.value = false\n      })\n  }\n\n  const initializeForm = () => {\n    form.value?.resetForm()\n\n    if (props.category) {\n      form.value?.setFieldValue('id', props.category.id)\n      form.value?.setFieldValue('name', props.category.name)\n      form.value?.setFieldValue('description', props.category.description || '')\n      form.value?.setFieldValue('parent_category', props.category.parent_id || '')\n      files.value = []\n    }\n  }\n\n  watch(props, () => {\n    initializeForm()\n  }, {\n    deep: true,\n    immediate: true\n  })\n</script>\n\n<template>\n  <Form class=\"category__form\" action=\"#\" :validation-schema=\"categorySchema\" @submit=\"submitHandler\" ref=\"form\">\n    <Field type=\"hidden\" name=\"id\" v-if=\"props.category\" />\n    <div class=\"form__group\">\n      <label for=\"cf__name\">Name</label>\n      <Field type=\"text\" name=\"name\" id=\"cf__name\" autocomplete=\"name\" />\n      <ErrorMessage class=\"input--error\" name=\"name\" />\n    </div>\n    <div class=\"form__group\">\n      <label for=\"cf__description\">Description</label>\n      <Field name=\"description\" v-slot=\"{ field }\">\n        <textarea v-bind=\"field\" id=\"cf__description\" />\n      </Field>\n      <ErrorMessage class=\"input--error\" name=\"description\" />\n    </div>\n    <div class=\"form__group\">\n      <label class=\"custom__file\">\n        <input type=\"file\" @change=\"handleFileInput\" name=\"file\" multiple accept=\"image/*\" />\n        <div class=\"custom__file__text\">\n          <ol class=\"custom__file__list\">\n            <template v-if=\"files.length > 0\">\n              <li class=\"custom__file__list__item\" v-for=\"(file, index) in files\">\n                <img :src=\"file.content\" :alt=\"file.name\">\n                <a href=\"#\" @click.prevent=\"files.splice(index, 1)\"><span class=\"icon-add\"></span></a>\n              </li>\n            </template>\n            <span class=\"custom__file__list__item\" v-else>\n              <strong>Select a file</strong>\n            </span>\n          </ol>\n        </div>\n      </label>\n    </div>\n    <div class=\"form__group\">\n      <label for=\"cf__parent_category\">Parent category</label>\n      <Field name=\"parent_category\" v-slot=\"{ field }\">\n        <select v-bind=\"field\" id=\"cf__parent_category\">\n          <option value=\"\">Select a parent</option>\n          <option :value=\"category.id\" v-for=\"category in categoryList\">{{ category.name }}</option>\n        </select>\n      </Field>\n      <ErrorMessage class=\"input--error\" name=\"parent_category\" />\n    </div>\n    <div class=\"text--right\">\n      <button type=\"submit\" :class=\"{ 'btn btn__primary': true, 'loading': isLoading }\">Save</button>\n    </div>\n  </Form>\n</template>","<script lang=\"ts\" setup>\n  import type { Category } from '@prisma/client'\n\n  import { formatDate } from '~/lib/filter'\n  import { useProductCategoryStore } from '~/store/productCategory'\n\n  import Modal from '~/components/Modal.vue'\n  import CategoryForm from '~/components/product/category/form.vue'\n  import Alert from '~/components/Alert.vue'\n\n  useHead({\n    title: 'Category :: Himalayan Beads'\n  })\n\n  definePageMeta({\n    layout: 'admin'\n  })\n\n  const { categoryList } = storeToRefs(useProductCategoryStore())\n  const { fetchCategory } = useProductCategoryStore()\n\n  const showForm = ref(false)\n  const isDeleting = ref(false)\n  const toggleAccordion = ref<any>({})\n  const editCategory = ref<null | Category>(null)\n  const deletingCategory = ref<null | Category>(null)\n\n  const deleteCategory = () => {\n    isDeleting.value = true\n\n    $fetch(`/api/category/${deletingCategory.value?.id}/`, {\n      method: 'DELETE'\n    })\n      .then(() => {\n        deletingCategory.value = null\n        fetchCategory()\n      })\n      .finally(() => {\n        isDeleting.value = false\n      })\n  }\n\n  const showDeleteAlert = computed(() => deletingCategory.value != null)\n\n  watch(editCategory, () => {\n    if (editCategory.value)\n      showForm.value = true\n    else\n      showForm.value = false\n  })\n\n  onMounted(() => {\n    fetchCategory()\n  })\n</script>\n\n<template>\n  <section class=\"datatable__section\">\n    <header class=\"datatable__header\">\n      <div class=\"datatable__header__holder\">\n        <h1>Product category</h1>\n      </div>\n      <div class=\"datatable__header__action\">\n        <a class=\"btn btn__primary\" href=\"#\" @click.prevent=\"showForm = true\">\n          <span class=\"prepend-icon icon-add\"></span>\n          Add Category\n        </a>\n      </div>\n    </header>\n    <div class=\"datatable__body\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th class=\"text--left\">Name</th>\n            <th>Created at</th>\n            <th class=\"text--right\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <template v-for=\"(category, index) in categoryList\" :key=\"category.id\">\n            <tr>\n              <td class=\"sn\">{{ index + 1 }}</td>\n              <td>\n                <div class=\"wrap\">\n                  <figure class=\"image\" v-if=\"category.image\">\n                    <img :src=\"category.image?.url || ''\" :alt=\"category.name\">\n                  </figure>\n                  <div class=\"holder\">\n                    <strong class=\"title\">{{ category.name }}</strong>\n                  </div>\n                </div>\n              </td>\n              <td class=\"text--center nowrap\">{{ formatDate(category.createdAt) }}</td>\n              <td class=\"text--right nowrap\">\n                <a class=\"btn btn--xs btn__info\" href=\"#\" @click.prevent=\"editCategory = category\">\n                  <span class=\"prepend-icon icon-edit\"></span>\n                  Edit\n                </a>\n                <a class=\"btn btn--xs btn__danger\" href=\"#\" @click.prevent=\"deletingCategory = category\">\n                  <span class=\"prepend-icon icon-trash\"></span>\n                  Delete\n                </a>\n                <a href=\"#\" class=\"btn btn--xs btn__primary btn--outline\" v-if=\"category?.predecessor.length > 0\"\n                  @click.prevent=\"toggleAccordion[category.id] = toggleAccordion[category.id] ? !toggleAccordion[category.id] : true\">\n                  <span class=\"icon-caret-d\" v-if=\"toggleAccordion[category.id]\"></span>\n                  <span class=\"icon-caret-t\" v-else></span>\n                </a>\n              </td>\n            </tr>\n            <tr v-if=\"category?.predecessor.length > 0 && toggleAccordion[category.id]\">\n              <td colspan=\"4\" class=\"no--spacing\">\n                <table class=\"subtable\">\n                  <tbody>\n                    <tr v-for=\"(subCategory, counter) in category.predecessor\">\n                      <td class=\"sn\">{{ index + 1 }}.{{ counter + 1 }}</td>\n                      <td class=\"text--center\">{{ subCategory.name }}</td>\n                      <td>{{ formatDate(subCategory.createdAt) }}</td>\n                      <td class=\"text--right\">\n                        <a class=\"btn btn--xs btn__info\" href=\"#\" @click.prevent=\"editCategory = subCategory\">\n                          <span class=\"prepend-icon icon-edit\"></span>\n                          Edit\n                        </a>\n                        <a class=\"btn btn--xs btn__danger\" href=\"#\" @click.prevent=\"deletingCategory = subCategory\">\n                          <span class=\"prepend-icon icon-trash\"></span>\n                          Delete\n                        </a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    </div>\n    <Modal v-model:show=\"showForm\" @modal:close=\"editCategory = null\">\n      <CategoryForm :category=\"editCategory || null\" @update-form=\"() => {\n        showForm = false\n\n        fetchCategory()\n      }\" />\n    </Modal>\n    <Alert title=\"Are you sure you want delete?\" v-model:show=\"showDeleteAlert\" v-model:loading=\"isDeleting\" :onCancel=\"() => {\n      deletingCategory = null\n    }\" :onConfirm=\"deleteCategory\">\n      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aliquid quo, explicabo necessitatibus laboriosam a\n        voluptatem hic ratione eius excepturi doloremque quidem odit eaque blanditiis illo obcaecati. Dicta adipisci\n        accusantium quidem.</p>\n    </Alert>\n  </section>\n</template>\n"],"names":["categorySchema","Yup.object","Yup.string","useFileStorage","files","ref","serializeFile","file","resolve","reject","reader","e","_a","error","event","promises","props","__props","emit","__emit","saveCategory","useProductCategoryStore","categoryList","storeToRefs","handleFileInput","form","isLoading","submitHandler","values","resetForm","initializeForm","_b","_c","_d","_e","watch","useHead","fetchCategory","showForm","isDeleting","toggleAccordion","editCategory","deletingCategory","deleteCategory","showDeleteAlert","computed","onMounted"],"mappings":"iVAEa,MAAAA,EAAiBC,EAAW,CACrC,KAAMC,IAAa,SAAS,EAAE,MAAM,MAAM,EAC1C,YAAaA,EAAW,EAAE,MAAM,aAAa,CACjD,CAAC,ECJc,SAAAC,GAAW,CACxB,MAAMC,EAAQC,EAAI,CAAA,CAAE,EACdC,EAAiBC,GACd,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,MAAMC,EAAS,IAAI,WACnBA,EAAO,OAAUC,GAAM,OACrBP,EAAM,MAAM,KAAK,CACf,GAAGG,EACH,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,aAAcA,EAAK,aACnB,SAASK,EAAAD,EAAE,SAAF,YAAAC,EAAU,MAC7B,CAAS,EACDJ,GACR,EACME,EAAO,QAAWG,GAAU,CAC1BJ,EAAOI,CAAK,CACpB,EACMH,EAAO,cAAcH,CAAI,CAC/B,CAAK,EAUH,MAAO,CACL,MAAAH,EACA,gBAVsB,MAAOU,GAAU,CACvCV,EAAM,MAAM,OAAO,CAAC,EACpB,MAAMW,EAAW,CAAA,EACjB,UAAWR,KAAQO,EAAM,OAAO,MAC9BC,EAAS,KAAKT,EAAcC,CAAI,CAAC,EAEnC,MAAM,QAAQ,IAAIQ,CAAQ,CAC9B,CAIA,CACA,2aCtBE,MAAMC,EAAQC,EACRC,EAAOC,EACP,CAAE,aAAAC,GAAiBC,IACnB,CAAE,aAAAC,CAAiB,EAAAC,EAAYF,EAAyB,CAAA,EACxD,CAAE,MAAAjB,EAAO,gBAAAoB,CAAgB,EAAIrB,EAAe,EAE5CsB,EAAOpB,IACPqB,EAAYrB,EAAI,EAAK,EAErBsB,EAAgB,CAACC,EAAa,CAAE,UAAAC,KAAmC,CACvEH,EAAU,MAAQ,GAELN,EAAA,CAAE,GAAGQ,EAAQ,MAAOxB,EAAM,KAAO,CAAA,EAC3C,KAAK,IAAM,CACVc,EAAK,aAAa,EACRW,GAAA,CACX,EACA,QAAQ,IAAM,CACbH,EAAU,MAAQ,EAAA,CACnB,CAAA,EAGCI,EAAiB,IAAM,gBAC3BlB,EAAAa,EAAK,QAAL,MAAAb,EAAY,YAERI,EAAM,YACRe,EAAAN,EAAK,QAAL,MAAAM,EAAY,cAAc,KAAMf,EAAM,SAAS,KAC/CgB,EAAAP,EAAK,QAAL,MAAAO,EAAY,cAAc,OAAQhB,EAAM,SAAS,OACjDiB,EAAAR,EAAK,QAAL,MAAAQ,EAAY,cAAc,cAAejB,EAAM,SAAS,aAAe,KACvEkB,EAAAT,EAAK,QAAL,MAAAS,EAAY,cAAc,kBAAmBlB,EAAM,SAAS,WAAa,IACzEZ,EAAM,MAAQ,GAChB,EAGF,OAAA+B,EAAMnB,EAAO,IAAM,CACFc,GAAA,EACd,CACD,KAAM,GACN,UAAW,EAAA,CACZ,+rEC1COM,EAAA,CACN,MAAO,6BAAA,CACR,EAMD,KAAM,CAAE,aAAAd,CAAiB,EAAAC,EAAYF,EAAyB,CAAA,EACxD,CAAE,cAAAgB,GAAkBhB,IAEpBiB,EAAWjC,EAAI,EAAK,EACpBkC,EAAalC,EAAI,EAAK,EACtBmC,EAAkBnC,EAAS,CAAA,CAAE,EAC7BoC,EAAepC,EAAqB,IAAI,EACxCqC,EAAmBrC,EAAqB,IAAI,EAE5CsC,EAAiB,IAAM,OAC3BJ,EAAW,MAAQ,GAEnB,OAAO,kBAAiB3B,EAAA8B,EAAiB,QAAjB,YAAA9B,EAAwB,EAAE,IAAK,CACrD,OAAQ,QAAA,CACT,EACE,KAAK,IAAM,CACV8B,EAAiB,MAAQ,KACXL,GAAA,CACf,EACA,QAAQ,IAAM,CACbE,EAAW,MAAQ,EAAA,CACpB,CAAA,EAGCK,EAAkBC,EAAS,IAAMH,EAAiB,OAAS,IAAI,EAErE,OAAAP,EAAMM,EAAc,IAAM,CACpBA,EAAa,MACfH,EAAS,MAAQ,GAEjBA,EAAS,MAAQ,EAAA,CACpB,EAEDQ,EAAU,IAAM,CACAT,GAAA,CACf","x_google_ignoreList":[1]}