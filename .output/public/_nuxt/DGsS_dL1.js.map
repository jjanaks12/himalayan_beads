{"version":3,"file":"DGsS_dL1.js","sources":["../../../../store/product.ts"],"sourcesContent":["import { Prisma, type Product } from '@prisma/client'\nimport { defineStore } from 'pinia'\nimport type { APIParam, APIQuery, APIResponse } from '~/himalayan_beads'\nimport { debounce } from '~/lib/helper/debounce'\n\nconst fullProduct = Prisma.validator<Prisma.ProductDefaultArgs>()({\n  include: {\n    category: true,\n    prices: true,\n    images: {\n      include: {\n        images: true\n      }\n    },\n    stock: true\n  }\n})\nexport type FullProduct = Prisma.ProductGetPayload<typeof fullProduct>\n\nconst productWithImage = Prisma.validator<Prisma.ImageOnProductDefaultArgs>()({\n  include: { images: true }\n})\nexport type ProductWithImage = Prisma.ImageOnProductGetPayload<typeof productWithImage>\n\nexport const useProductStore = defineStore('product', () => {\n  const isLoading = ref(false)\n  const param = ref<APIParam<any>>()\n  const query = ref<APIQuery>({\n    per_page: 20,\n    current: 1,\n    s: ''\n  })\n\n  const fetchProduct = async () => {\n    isLoading.value = true\n    const productResponse = await $fetch<APIResponse<APIParam<any>>>('/api/product', { query: query.value })\n\n    if (productResponse.status == 'success') {\n      param.value = productResponse.data\n    }\n\n    isLoading.value = false\n  }\n\n  const saveProduct = (values: any) => new Promise((resolve, reject) => {\n    {\n      $fetch<APIResponse<any>>('/api/product', {\n        method: 'POST',\n        body: values\n      })\n        .then((a) => {\n          if (a.status == 'success')\n            resolve(true)\n          else\n            reject(a.message)\n        })\n    }\n  })\n\n  const nextPage = () => {\n    const current = Math.min(param.value?.total_page as number, query.value.current + 1)\n\n    if (current != param.value?.current)\n      query.value = { ...query.value, current }\n  }\n\n  const prevPage = () => {\n    const current = Math.max(0, query.value.current - 1)\n\n    if (current != param.value?.current)\n      query.value = { ...query.value, current }\n  }\n\n  const gotoPage = (page_no: number) => {\n    const newPage = Math.min(param.value?.total_page || 0, Math.max(0, page_no))\n\n    if (query.value.current != newPage)\n      query.value = { ...query.value, current: newPage }\n  }\n\n  const productList = computed(() => param.value?.data)\n\n  watch(query, () => {\n    debounce(() => {\n      fetchProduct()\n    }, 500)\n  }, {\n    deep: true,\n    immediate: true\n  })\n\n  return { fetchProduct, saveProduct, nextPage, prevPage, gotoPage, productList, isLoading, param, query }\n})\n"],"names":["Prisma","useProductStore","defineStore","isLoading","ref","param","query","fetchProduct","productResponse","saveProduct","values","resolve","reject","a","nextPage","current","_a","_b","prevPage","gotoPage","page_no","newPage","productList","computed","watch","debounce"],"mappings":"sHAKoBA,EAAO,OAAA,UAAA,EAAuC,CAChE,QAAS,CACP,SAAU,GACV,OAAQ,GACR,OAAQ,CACN,QAAS,CACP,OAAQ,EACV,CACF,EACA,MAAO,EACT,CACF,CAAC,EAGwBA,EAAO,OAAA,UAAA,EAA8C,CAC5E,QAAS,CAAE,OAAQ,EAAK,CAC1B,CAAC,EAGY,MAAAC,EAAkBC,EAAY,UAAW,IAAM,CACpD,MAAAC,EAAYC,EAAI,EAAK,EACrBC,EAAQD,IACRE,EAAQF,EAAc,CAC1B,SAAU,GACV,QAAS,EACT,EAAG,EAAA,CACJ,EAEKG,EAAe,SAAY,CAC/BJ,EAAU,MAAQ,GACZ,MAAAK,EAAkB,MAAM,OAAmC,eAAgB,CAAE,MAAOF,EAAM,MAAO,EAEnGE,EAAgB,QAAU,YAC5BH,EAAM,MAAQG,EAAgB,MAGhCL,EAAU,MAAQ,EAAA,EAGdM,EAAeC,GAAgB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAElE,OAAyB,eAAgB,CACvC,OAAQ,OACR,KAAMF,CAAA,CACP,EACE,KAAMG,GAAM,CACPA,EAAE,QAAU,UACdF,EAAQ,EAAI,EAEZC,EAAOC,EAAE,OAAO,CAAA,CACnB,CACL,CACD,EAEKC,EAAW,IAAM,SACf,MAAAC,EAAU,KAAK,KAAIC,EAAAX,EAAM,QAAN,YAAAW,EAAa,WAAsBV,EAAM,MAAM,QAAU,CAAC,EAE/ES,KAAWE,EAAAZ,EAAM,QAAN,YAAAY,EAAa,WAC1BX,EAAM,MAAQ,CAAE,GAAGA,EAAM,MAAO,QAAAS,CAAQ,EAAA,EAGtCG,EAAW,IAAM,OACrB,MAAMH,EAAU,KAAK,IAAI,EAAGT,EAAM,MAAM,QAAU,CAAC,EAE/CS,KAAWC,EAAAX,EAAM,QAAN,YAAAW,EAAa,WAC1BV,EAAM,MAAQ,CAAE,GAAGA,EAAM,MAAO,QAAAS,CAAQ,EAAA,EAGtCI,EAAYC,GAAoB,OAC9B,MAAAC,EAAU,KAAK,MAAIL,EAAAX,EAAM,QAAN,YAAAW,EAAa,aAAc,EAAG,KAAK,IAAI,EAAGI,CAAO,CAAC,EAEvEd,EAAM,MAAM,SAAWe,IACzBf,EAAM,MAAQ,CAAE,GAAGA,EAAM,MAAO,QAASe,GAAQ,EAG/CC,EAAcC,EAAS,IAAA,OAAM,OAAAP,EAAAX,EAAM,QAAN,YAAAW,EAAa,KAAI,EAEpD,OAAAQ,EAAMlB,EAAO,IAAM,CACjBmB,EAAS,IAAM,CACAlB,KACZ,GAAG,CAAA,EACL,CACD,KAAM,GACN,UAAW,EAAA,CACZ,EAEM,CAAE,aAAAA,EAAc,YAAAE,EAAa,SAAAK,EAAU,SAAAI,EAAU,SAAAC,EAAU,YAAAG,EAAa,UAAAnB,EAAW,MAAAE,EAAO,MAAAC,EACnG,CAAC"}