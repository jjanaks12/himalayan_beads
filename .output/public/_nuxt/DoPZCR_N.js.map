{"version":3,"file":"DoPZCR_N.js","sources":["../../../../store/user.ts","../../../../pages/dashboard/user/index.vue"],"sourcesContent":["import { Prisma, type User } from '@prisma/client'\nimport { defineStore } from 'pinia'\n\nconst fullUser = Prisma.validator<Prisma.UserDefaultArgs>()({\n  include: {\n    image: true,\n    role: true\n  }\n})\nexport type FullUser = Prisma.UserGetPayload<typeof fullUser>\nexport const useUserStore = defineStore('user', () => {\n  const userList = ref<FullUser[]>([])\n\n  const fetchUser = () => new Promise(async (resolve, reject) => {\n    $fetch('/api/user', {\n      method: 'GET'\n    })\n      .then((response: any) => {\n        if (response.status == 'success')\n          userList.value = response.data\n      })\n  })\n\n  return { userList, fetchUser }\n})\n","<script lang=\"ts\" setup>\n  import { formatDate } from '~/lib/filter'\n  import { useUserStore } from '~/store/user'\n\n  useHead({\n    title: 'Users :: Himalayan Beads'\n  })\n\n  definePageMeta({\n    layout: 'admin',\n    middleware: ['auth', 'authorization'],\n    permission: 'view_user'\n  })\n\n  const { userList } = storeToRefs(useUserStore())\n  const { fetchUser } = useUserStore()\n\n  onMounted(async () => {\n    await fetchUser()\n  })\n</script>\n\n<template>\n  <section class=\"datatable__section\">\n    <header class=\"datatable__header\">\n      <div class=\"datatable__header__holder\">\n        <h1>Users</h1>\n      </div>\n    </header>\n    <div class=\"datatable__body\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th class=\"text--left\">Name</th>\n            <th>Created at</th>\n            <th>Email verified</th>\n            <th class=\"text--right\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(user, index) in userList\">\n            <td class=\"sn\">{{ index + 1 }}</td>\n            <td>\n              <div class=\"wrap\">\n                <figure class=\"image\" v-if=\"user.image\">\n                  <img :src=\"user?.image.url as string\" :alt=\"user.name as string\">\n                </figure>\n                <div class=\"holder\">\n                  <NuxtLink :to=\"'/dashboard/user/' + user.id\" class=\"title\">{{ user.name }}</NuxtLink>\n                  <em class=\"subtitle\">{{ user.email }}</em>\n                  <span class=\"badge badge--info\">{{ user.role.name }}</span>\n                </div>\n              </div>\n            </td>\n            <td class=\"text--center\">{{ formatDate(user.createdAt) }}</td>\n            <td class=\"text--center\">\n              <MdiIcon preserveAspectRatio=\"xMidYMid meet\" icon=\"mdiShieldCheck\" class=\"text--success\" v-if=\"user.emailVerified != null\" />\n            </td>\n            <td class=\"text--right\">\n              <a href=\"#\" class=\"btn btn--xs btn__danger\">change role</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </section>\n</template>\n"],"names":["Prisma","useUserStore","defineStore","userList","ref","resolve","reject","response","useHead","storeToRefs","fetchUser","onMounted"],"mappings":"iWAGiBA,EAAO,OAAA,UAAA,EAAoC,CAC1D,QAAS,CACP,MAAO,GACP,KAAM,EACR,CACF,CAAC,EAEY,MAAAC,EAAeC,EAAY,OAAQ,IAAM,CAC9C,MAAAC,EAAWC,EAAgB,CAAA,CAAE,EAY5B,MAAA,CAAE,SAAAD,EAAU,UAVD,IAAM,IAAI,QAAQ,MAAOE,EAASC,IAAW,CAC7D,OAAO,YAAa,CAClB,OAAQ,KAAA,CACT,EACE,KAAMC,GAAkB,CACnBA,EAAS,QAAU,YACrBJ,EAAS,MAAQI,EAAS,KAAA,CAC7B,CAAA,CACJ,EAGH,CAAC,0RCpBSC,EAAA,CACN,MAAO,0BAAA,CACR,EAQD,KAAM,CAAE,SAAAL,CAAa,EAAAM,EAAYR,EAAc,CAAA,EACzC,CAAE,UAAAS,GAAcT,IAEtB,OAAAU,EAAU,SAAY,CACpB,MAAMD,EAAU,CAAA,CACjB"}