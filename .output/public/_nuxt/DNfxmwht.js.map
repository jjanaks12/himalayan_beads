{"version":3,"file":"DNfxmwht.js","sources":["../../../../lib/schema/cart.schema.ts","../../../../store/app.ts","../../../../pages/checkout/_components/CheckoutForm.vue"],"sourcesContent":["import * as Y from 'yup'\n\nexport const checkoutSchema = Y.object().shape({\n    billing_street: Y.string().required().label('Street'),\n    billing_address: Y.string().required().label('Address'),\n    billing_city: Y.string().required().label('City'),\n    billing_state: Y.string().required().label('State'),\n    billing_zipcode: Y.string().required().label('Zipcode'),\n    billing_country: Y.string().required().label('Country'),\n\n    shipping_street: Y.string().required().label('Street'),\n    shipping_address: Y.string().required().label('Address'),\n    shipping_city: Y.string().required().label('City'),\n    shipping_state: Y.string().required().label('State'),\n    shipping_zipcode: Y.string().required().label('Zipcode'),\n    shipping_country: Y.string().required().label('Country'),\n})","import type { Country } from '@prisma/client'\nimport { defineStore } from 'pinia'\n\nexport const useAppStore = defineStore('app', () => {\n  const countryList = ref<Country[]>([])\n\n  const fetchCountry = async () => {\n    const countries = await $fetch('/api/country')\n    countryList.value = countries\n  }\n\n  return { countryList, fetchCountry }\n})\n","<script lang=\"ts\" setup>\n  import { Form, Field, ErrorMessage } from 'vee-validate'\n\n  import { checkoutSchema } from '~/lib/schema/cart.schema'\n  import { useAppStore } from '~/store/app'\n  import { useCartStore } from '~/store/cart'\n\n  const { countryList } = storeToRefs(useAppStore())\n  const { list } = storeToRefs(useCartStore())\n  const { fetchCountry } = useAppStore()\n  const sameAsAbove = ref(false)\n  const isLoading = ref(false)\n  const form = ref()\n\n  const formSubmit = async (values: any) => {\n    isLoading.value = true\n    await $fetch('/api/cart/checkout', {\n      method: 'POST',\n      body: { ...values, cart: list.value }\n    })\n      .then(() => {\n        list.value = []\n        navigateTo({\n          name: 'product'\n        })\n      })\n      .finally(() => {\n        isLoading.value = false\n      })\n  }\n\n  onMounted(() => {\n    if (countryList.value.length == 0)\n      fetchCountry()\n  })\n\n  watch(sameAsAbove, () => {\n    if (sameAsAbove.value) {\n      const formData = { ...form.value.values }\n\n      form.value.setValues({\n        ...formData,\n        shipping_street: formData.billing_street,\n        shipping_address: formData.billing_address,\n        shipping_city: formData.billing_city,\n        shipping_state: formData.billing_state,\n        shipping_zipcode: formData.billing_zipcode,\n        shipping_country: formData.billing_country,\n      })\n    }\n  })\n</script>\n\n<template>\n  <Form :validation-schema=\"checkoutSchema\" @submit=\"formSubmit\" class=\"form\" ref=\"form\">\n    <fieldset>\n      <h3>Billing address</h3>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form__group\">\n            <label for=\"cf__billing_street\">Street</label>\n            <Field name=\"billing_street\" id=\"cf__billing_street\" type=\"text\" />\n            <ErrorMessage name=\"billing_street\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form__group\">\n            <label for=\"cf__billing_address\">Address</label>\n            <Field name=\"billing_address\" id=\"cf__billing_address\" type=\"text\" />\n            <ErrorMessage name=\"billing_address\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form__group\">\n            <label for=\"cf__billing_city\">City</label>\n            <Field name=\"billing_city\" id=\"cf__billing_city\" type=\"text\" />\n            <ErrorMessage name=\"billing_city\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form__group\">\n            <label for=\"cf__billing_state\">State</label>\n            <Field name=\"billing_state\" id=\"cf__billing_state\" type=\"text\" />\n            <ErrorMessage name=\"billing_state\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form__group\">\n            <label for=\"cf__billing_zipcode\">Zipcode</label>\n            <Field name=\"billing_zipcode\" id=\"cf__billing_zipcode\" type=\"text\" />\n            <ErrorMessage name=\"billing_zipcode\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form__group\">\n            <label for=\"cf__billing_country\">Country</label>\n            <Field name=\"billing_country\" v-slot=\"{ field }\">\n              <select v-bind=\"field\" id=\"cf__billing_country\">\n                <option value=\"\">Select a country</option>\n                <option v-for=\"country in countryList\" :value=\"country.id\">{{ country.name }}</option>\n              </select>\n            </Field>\n            <ErrorMessage name=\"billing_country\" class=\"input--error\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <fieldset>\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <h3>Shipping address</h3>\n        </div>\n        <div class=\"col-4 text--right\">\n          <label class=\"custom__checkbox\">\n            <input type=\"checkbox\" v-model=\"sameAsAbove\">\n            <span class=\"custom__checkbox__text\">Same as above</span>\n          </label>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form__group\">\n            <label for=\"cf__shipping_street\">Street</label>\n            <Field name=\"shipping_street\" id=\"cf__shipping_street\" type=\"text\" />\n            <ErrorMessage name=\"shipping_street\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form__group\">\n            <label for=\"cf__shipping_address\">Address</label>\n            <Field name=\"shipping_address\" id=\"cf__shipping_address\" type=\"text\" />\n            <ErrorMessage name=\"shipping_address\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form__group\">\n            <label for=\"cf__shipping_city\">City</label>\n            <Field name=\"shipping_city\" id=\"cf__shipping_city\" type=\"text\" />\n            <ErrorMessage name=\"shipping_city\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form__group\">\n            <label for=\"cf__shipping_state\">State</label>\n            <Field name=\"shipping_state\" id=\"cf__shipping_state\" type=\"text\" />\n            <ErrorMessage name=\"shipping_state\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <div class=\"form__group\">\n            <label for=\"cf__shipping_zipcode\">Zipcode</label>\n            <Field name=\"shipping_zipcode\" id=\"cf__shipping_zipcode\" type=\"text\" />\n            <ErrorMessage name=\"shipping_zipcode\" class=\"input--error\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form__group\">\n            <label for=\"cf__shipping_country\">Country</label>\n            <Field name=\"shipping_country\" v-slot=\"{ field }\">\n              <select v-bind=\"field\" id=\"cf__shipping_country\">\n                <option value=\"\">Select a country</option>\n                <option v-for=\"country in countryList\" :value=\"country.id\">{{ country.name }}</option>\n              </select>\n            </Field>\n            <ErrorMessage name=\"shipping_country\" class=\"input--error\" />\n          </div>\n        </div>\n      </div>\n    </fieldset>\n    <div class=\"text--right\">\n      <Button type=\"submit\" permission=\"create_order\" :loading=\"isLoading\">Checkout</Button>\n    </div>\n  </Form>\n</template>\n\n<style></style>"],"names":["checkoutSchema","Y.object","Y.string","useAppStore","defineStore","countryList","ref","countries","storeToRefs","list","useCartStore","fetchCountry","sameAsAbove","isLoading","form","formSubmit","values","navigateTo","onMounted","watch","formData"],"mappings":"uTAEO,MAAMA,EAAiBC,EAAS,EAAE,MAAM,CAC3C,eAAgBC,IAAW,SAAS,EAAE,MAAM,QAAQ,EACpD,gBAAiBA,IAAW,SAAS,EAAE,MAAM,SAAS,EACtD,aAAcA,IAAW,SAAS,EAAE,MAAM,MAAM,EAChD,cAAeA,IAAW,SAAS,EAAE,MAAM,OAAO,EAClD,gBAAiBA,IAAW,SAAS,EAAE,MAAM,SAAS,EACtD,gBAAiBA,IAAW,SAAS,EAAE,MAAM,SAAS,EAEtD,gBAAiBA,IAAW,SAAS,EAAE,MAAM,QAAQ,EACrD,iBAAkBA,IAAW,SAAS,EAAE,MAAM,SAAS,EACvD,cAAeA,IAAW,SAAS,EAAE,MAAM,MAAM,EACjD,eAAgBA,IAAW,SAAS,EAAE,MAAM,OAAO,EACnD,iBAAkBA,IAAW,SAAS,EAAE,MAAM,SAAS,EACvD,iBAAkBA,IAAW,SAAS,EAAE,MAAM,SAAS,CAC3D,CAAC,ECbYC,EAAcC,EAAY,MAAO,IAAM,CAC5C,MAAAC,EAAcC,EAAe,CAAA,CAAE,EAO9B,MAAA,CAAE,YAAAD,EAAa,aALD,SAAY,CACzB,MAAAE,EAAY,MAAM,OAAO,cAAc,EAC7CF,EAAY,MAAQE,CAAA,EAIxB,CAAC,isBCLC,KAAM,CAAE,YAAAF,CAAgB,EAAAG,EAAYL,EAAa,CAAA,EAC3C,CAAE,KAAAM,CAAS,EAAAD,EAAYE,EAAc,CAAA,EACrC,CAAE,aAAAC,GAAiBR,IACnBS,EAAcN,EAAI,EAAK,EACvBO,EAAYP,EAAI,EAAK,EACrBQ,EAAOR,IAEPS,EAAa,MAAOC,GAAgB,CACxCH,EAAU,MAAQ,GAClB,MAAM,OAAO,qBAAsB,CACjC,OAAQ,OACR,KAAM,CAAE,GAAGG,EAAQ,KAAMP,EAAK,KAAM,CAAA,CACrC,EACE,KAAK,IAAM,CACVA,EAAK,MAAQ,GACFQ,EAAA,CACT,KAAM,SAAA,CACP,CAAA,CACF,EACA,QAAQ,IAAM,CACbJ,EAAU,MAAQ,EAAA,CACnB,CAAA,EAGL,OAAAK,EAAU,IAAM,CACVb,EAAY,MAAM,QAAU,GACjBM,GAAA,CAChB,EAEDQ,EAAMP,EAAa,IAAM,CACvB,GAAIA,EAAY,MAAO,CACrB,MAAMQ,EAAW,CAAE,GAAGN,EAAK,MAAM,MAAO,EAExCA,EAAK,MAAM,UAAU,CACnB,GAAGM,EACH,gBAAiBA,EAAS,eAC1B,iBAAkBA,EAAS,gBAC3B,cAAeA,EAAS,aACxB,eAAgBA,EAAS,cACzB,iBAAkBA,EAAS,gBAC3B,iBAAkBA,EAAS,eAAA,CAC5B,CACH,CAAA,CACD"}